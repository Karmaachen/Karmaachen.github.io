<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VP Codeforces Round 954 Div. 3</title>
    <url>/2024/07/VP-Codeforces-Round-954-Div-3/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年6月30日 星期日 23:28 <br />备注：暑假第一场VP，蓝桥杯之后基本没有做过题，cf的板子也没有准备，因此开了一次div3试试水。结果也是出奇的烂啊，只开了前4题，第四题还因为越做越乱而没有做完。<br />完成情况：<br /><img src="https://imagebed-c8c.pages.dev/file/d65af6afc4119a77c5466.png"><br />8684</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="A："><a href="#A：" class="headerlink" title="A："></a>A：</h2><p>三点求绝对值，没啥难度；</p>
<h2 id="B：Matrix-Stabilization"><a href="#B：Matrix-Stabilization" class="headerlink" title="B：Matrix Stabilization"></a>B：Matrix Stabilization</h2><p>一个简单的贪婪题，按照序号每次找周围元素的最小值然后赋值即可。<br /><img src="/images/image2.png" alt="image2.png"><br />感觉有更简便的形式，之后记得看竞速大佬的代码。</p>
<h2 id="C：Update-Queries"><a href="#C：Update-Queries" class="headerlink" title="C：Update Queries"></a>C：Update Queries</h2><p>又是一道贪心。</p>
<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给出一组索引（指向原字符串位置），和一组备选字母，调整顺序，修改原来的字符串，从而使原来的字符串可以达到字典序最小值。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>给备选字母排序，每个需要修改的位置，从高到低给予能给的最小字典序字母即可。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n, m;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="type">char</span> target[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; target[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> s[N];</span><br><span class="line">        <span class="type">bool</span> exist[N] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; s[i]; <span class="comment">// 索引</span></span><br><span class="line">            exist[s[i]] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> p[N];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; p[i]; <span class="comment">// 备选</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(s + <span class="number">1</span>, s + m + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">sort</span>(p + <span class="number">1</span>, p + m + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// process</span></span><br><span class="line">        <span class="type">int</span> in = <span class="number">1</span>; <span class="comment">// 备选</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (exist[i])</span><br><span class="line">            &#123;</span><br><span class="line">                target[i] = p[in];</span><br><span class="line">                in++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// cout</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; target[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>33行中的if条件刚开始还限制非常多，想着什么必须要在索引排序后交接处啥的···，其实完全没有用。不谈了</p>
<h1 id="D：Mathematical-Problem"><a href="#D：Mathematical-Problem" class="headerlink" title="D：Mathematical Problem"></a>D：Mathematical Problem</h1><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>提供数字字符串，及其长度n。要求添加n-2个加号或者乘号，使其结果式子的结果最小。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>比赛时有的思路：<br />讨论长度2和3.<br />有0的，结果为0；<br />有1的，要讨论（乱了），如果前n-1个数中没有1，要找连续两位数里最小的，然后写不完了。<br>复盘：无需讨论，直接遍历i，看i和i+1上数字情况。</p>
<p>官方题解：<br>首先，让我们遍历位置 i，这样我们就不用在第 i-th 和 (i+1)-th 元素之间放置一个数学符号。</p>
<p>接下来，我们有以下任务——我们有 n−1数字，我们需要在每对相邻数字之间放置一个 + or × 符号以最小化结果。有三种可能的情况：</p>
<p>如果至少有一个 0，答案是 0。我们可以简单地将所有符号放置为 ×.<br>如果所有数字都是 1，答案是 1。我们可以简单地将所有符号放置为 ×.<br>否则，答案是不等于 1 的数字之和。将大于 1 的数字相乘是没有好处的，所有 1 都可以简单地乘以任何邻居。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>], b[<span class="number">20</span>], c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> tc;</span><br><span class="line">    cin &gt;&gt; tc;</span><br><span class="line">    <span class="keyword">while</span> (tc--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">        <span class="comment">// a[n]是数字数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            a[i] = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c = <span class="number">0</span>; <span class="comment">// b数组用来算结果。</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) <span class="comment">// 讨论第i个数字，是否将它和下一个数字组成一个两位数</span></span><br><span class="line">                    b[c++] = a[j] * <span class="number">10</span> + a[j + <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (i + <span class="number">1</span> != j) <span class="comment">// 没到第i个数字，就直接放</span></span><br><span class="line">                    b[c++] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">bool</span> f = <span class="number">0</span>; <span class="comment">// 有0，直接break</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++)</span><br><span class="line">                f |= b[j] == <span class="number">0</span>; <span class="comment">// 检查 b[j] 是否为0，并根据结果设置 f 的最低位。如果 b[j] 为0，f 的最低位将被设置为1；否则，f 的值保持不变（如果它的最低位已经是1的话）</span></span><br><span class="line">            <span class="keyword">if</span> (f)              <span class="comment">// 有0直接break</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> cur = <span class="number">0</span>; <span class="comment">// 暂时答案</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++)</span><br><span class="line">                <span class="keyword">if</span> (b[j] != <span class="number">1</span>) <span class="comment">// 不为1就加</span></span><br><span class="line">                    cur += b[j];</span><br><span class="line">            <span class="keyword">if</span> (!cur)</span><br><span class="line">                cur++;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, cur); <span class="comment">// 比较哪种最小</span></span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>这题耗了一半赛时还没做出来，感觉属实不应该，之后找补<br>复盘：其实一开始就想到贪心总体思路是对的，但是之后没有把贪心的情况考虑完整就开始写代码，导致代码写的很乱。</p>
<h3 id=""><a href="#" class="headerlink" title=""></a><br /></h3>]]></content>
      <tags>
        <tag>codeforces</tag>
        <tag>div3</tag>
        <tag>题解</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2024/06/hello-world/</url>
    <content><![CDATA[<p>本博客于2024年6月30日下午搭建，用来记录本人学习过程和分享等···<br>还没想好写点啥，先占个坑吧<br>使用<a href="https://hexo.io/">hexo</a>搭建，主题为<a href="https://github.com/iissnan/hexo-theme-next">butterfly</a></p>
<p>这里顺便写写博客美化计划吧：<br>1.加图床（优先）（需要插件？？）<br>2.归档分类<br>3、···头像啥的杂项</p>
]]></content>
  </entry>
  <entry>
    <title>VP Codeforces Round 953 (Div. 2)</title>
    <url>/2024/07/VP-Codeforces-Round-953-Div-2/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月1日 星期一 17:15<br />完成情况：<img src="https://imagebed-c8c.pages.dev/file/40cd392aed250647e3151.png"></p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="A-Alice-and-Books"><a href="#A-Alice-and-Books" class="headerlink" title="A. Alice and Books"></a>A. Alice and Books</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>将数分成两堆，选取每堆”最大数字”的书读。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>读题类题目，认真读了快十分钟做出来···，都以为是最大页数。最大数字必定看，因此找出最小到第二大数字中最大页数的书。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">101</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="type">int</span> c[N];</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            cin &gt;&gt; c[i];</span><br><span class="line">        <span class="built_in">sort</span>(c, c+n<span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        ans = c[n - <span class="number">1</span>] + c[n - <span class="number">2</span>];</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B-New-Bakery"><a href="#B-New-Bakery" class="headerlink" title="B. New Bakery"></a>B. New Bakery</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>卖东西，分为正常价格a和活动价格b，第k个活动价格为b−i+1。问最大的利润。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>初中函数题目，写出二次方程方程式：<br />$w&#x3D;-(0.5) * k^2 + (0.5 - a + b) * k + n * a$<br />当k&#x3D;（0.5-a+b)时候最大。<br />直接在周边几个整数比较大小。<br />分情况讨论：<br />先看是否b - n + 1 &gt; a，也就是说活动价永远比正常价格好。如果是，所有物品都用活动价卖出，k&#x3D;n;<br />如果不是这样：</p>
<ol>
<li>最大值的k小于等于0，k&#x3D;0;</li>
<li>最大值的k大于0，k取（0.5-a+b)，代入算出周边整数值最大情况。</li>
</ol>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">func</span><span class="params">(LL a, LL b, LL n, LL k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> -(<span class="number">0.5</span>) * k * k + (<span class="number">0.5</span> - a + b) * k + n * a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL n, a, b;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0.5</span> - a + b &gt; <span class="number">0</span> &amp;&amp; b - n + <span class="number">1</span> &lt; a)</span><br><span class="line">        &#123;</span><br><span class="line">            LL ans = <span class="built_in">max</span>(<span class="built_in">func</span>(a, b, n, (<span class="number">0.5</span> - a + b)), <span class="built_in">func</span>(a, b, n, (<span class="number">1.5</span> - a + b)));</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, (LL)<span class="built_in">func</span>(a, b, n, (<span class="number">-0.5</span> - a + b)));</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (b - n + <span class="number">1</span> &gt;= a)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">func</span>(a, b, n, n) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">func</span>(a, b, n, <span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>这题耽误太多时间（40分钟）的原因就是第一个if少了个b-n+1&lt;a，导致都用第一个算，有一个样例一直过大。要注意if条件对应的情况，划分要清楚。</p>
<h2 id="C-Manhattan-Permutations"><a href="#C-Manhattan-Permutations" class="headerlink" title="C. Manhattan Permutations"></a>C. Manhattan Permutations</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>一种算法，交换1,2,3,4,5···的顺序从而使|p1−1|+|p2−2|+…+|pn−n|&#x3D;一个值k。如果可行，输出Yes和交换后的顺序。如果不可行，输出No。</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>先讨论：</p>
<ol>
<li>k为奇数永远不可能，直接no</li>
<li>k为偶数：</li>
</ol>
<p>计算此时能表示的最大值（数学推等差数列）<br />如果k大了，no<br />如果没有大，进入下一阶段：<br />在原封不动的情况下，交换一次增长的值是2*交换两者下表的差。<br />因此直接依据此贪心，每个位置最多交换一次，用双指针从开头和结尾向中间遍历，进行交换，并更新到k还剩多少。<br />直到交换两者增长的值大于现在的需求了。改为移动一个指针，获取最后一次交换。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200001</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL n, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        LL max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            max = (n * <span class="number">0.5</span>) * (n * <span class="number">0.5</span>) * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            max = (n + <span class="number">1</span>) * <span class="number">0.5</span> * ((n + <span class="number">1</span>) * <span class="number">0.5</span> - <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (k &gt; max)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LL need = <span class="number">0.5</span> * k;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="type">int</span> r = n, l = <span class="number">1</span>; <span class="comment">// 双指针</span></span><br><span class="line">            <span class="type">int</span> ans[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[i] = i;</span><br><span class="line">            &#125;</span><br><span class="line">             <span class="keyword">while</span> (r - l &lt;= need)</span><br><span class="line">             &#123;</span><br><span class="line">                <span class="type">int</span> t =ans[l];</span><br><span class="line">                ans[l] = ans[r];</span><br><span class="line">                ans[r] = t;</span><br><span class="line">                </span><br><span class="line">                     need =need- r + l;</span><br><span class="line">                     l++;</span><br><span class="line">                     r--;</span><br><span class="line">                     <span class="keyword">if</span>(need == <span class="number">0</span>)&#123;</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">             &#125;</span><br><span class="line">              <span class="keyword">while</span> (need != <span class="number">0</span>)&#123;</span><br><span class="line">               l++;</span><br><span class="line">               <span class="keyword">if</span> (r - l == need)&#123;</span><br><span class="line">               <span class="built_in">swap</span>(ans[l], ans[r]);</span><br><span class="line">               need -= r - l;&#125;</span><br><span class="line">               &#125;</span><br><span class="line">             <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">             &#123;</span><br><span class="line">                 cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>这个过程耗时最大的就是第一个while一直输出不出来，直到后来在循环中加了一个break检测：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(need == <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也就是一阶段就成功的情况没考虑，导致第一个用例就过不了。后面也是极限救场了，凭感觉写的贪心哭着也要写完。</p>
<h2 id="D-Elections"><a href="#D-Elections" class="headerlink" title="D. Elections"></a>D. Elections</h2><p>赛后补一题。1600分。赛中也没来得及开。用时1小时，还挺满意的做出来了。</p>
<h3 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h3><p>有选举者按序号排序，每个选举者有固定票（粉丝）和犹豫票。犹豫者刚开始就有，会把票给序号最小（最左）者；排除一个选举者，他的粉丝全部变成犹豫票。<br />问你：如何排除最小数量的选举者，从而赢得选举？</p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>全是贪心，做烂了。<br />先遍历一遍，找到最大值所在处max。顺便搞个前缀和数组。<br />然后遍历选举者，分情况讨论：</p>
<ol>
<li>当前位置是max：<ol>
<li>第一位fans[1]加上犹豫者，fans[1]+c小于max，则一个也不用去掉，输出0；</li>
<li>第一位就是最大值，也输出0，不用去掉</li>
<li>fans[1]+c大于max，遍历maxwhere（max的位置,也就是现在看的位置)之前的选举者<ol>
<li>遍历过程中若发现c + sum[j] &lt; max，遍历结束，即去掉j之前的选举者，输出j-1</li>
<li>遍历到头，那就输出maxwhere-1，把之前的都去掉。</li>
</ol>
</li>
</ol>
</li>
<li>当前位置不是max，前面肯定都得去掉<ol>
<li>如果max的位置在这之前，那去掉了直接变成新的max，输出当前位置之前，i-1;</li>
<li>否则，在这之后，要考虑用不用把max去了，计算c + sum[i] &gt;&#x3D; max<ol>
<li>是，则证明不用去，输出i-1</li>
<li>否，则证明还是得把max去掉，输出i</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200001</span>;</span><br><span class="line">LL fans[N];</span><br><span class="line">LL c; <span class="comment">// undecided</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        LL sum[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; fans[i];</span><br><span class="line">            sum[i] = sum[i - <span class="number">1</span>] + fans[i];</span><br><span class="line">        &#125;</span><br><span class="line">        LL max = fans[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> maxwhere = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (max &lt; fans[i])</span><br><span class="line">            &#123;</span><br><span class="line">                max = fans[i];</span><br><span class="line">                maxwhere = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == maxwhere)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (c + fans[<span class="number">1</span>] &lt; max || maxwhere == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> yes = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; maxwhere; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (c + sum[j] &gt;= max)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            cout &lt;&lt; j - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                            yes = <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (yes != <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; maxwhere - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (maxwhere &lt; i)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; i - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (c + sum[i] &gt;= max)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; i - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h3><p>令人感慨做的还挺丝滑的，不过就是忘开LL导致wa了一次，看了测试用例情况。要是比赛遇到不知道能不能反映过来···</p>
]]></content>
      <tags>
        <tag>codeforces</tag>
        <tag>题解</tag>
        <tag>贪心</tag>
        <tag>div2</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客技术栈总结（持续更新）</title>
    <url>/2024/07/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8A%80%E6%9C%AF%E6%A0%88%E6%80%BB%E7%BB%93%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    <content><![CDATA[<p>本篇文章持续更新我的博客建立过程和学习过程。</p>
<h1 id="搭建：hexo-github"><a href="#搭建：hexo-github" class="headerlink" title="搭建：hexo+github"></a>搭建：hexo+github</h1><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>在b站键入hexo和github检索，有很多这样的教程。<br />主要参考以下几个：<br /><a href="https://www.bilibili.com/video/BV1Ju4m1c7WR/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">【零成本】Hexo个人博客搭建教程 | 无需服务器</a><br /><a href="https://player.bilibili.com/player.html?bvid=BV16b4y1G7fo&autoplay=0">无限空间的免费图床，感谢cloudflare</a><br />搭建过程基本上就是使用github建库，git更新，然后hexo ，一个基于node.js的框架，用来搭载博客在服务器上。</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>hexo clean<br />hexo g ：generate生成<br />hexo d：deploy部署到github上<br />hexo s：本地部署</p>
<h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><ol>
<li>hexo d部署失败</li>
</ol>
<p>解决方案：改hosts；<br />&#x2F;&#x2F;取消http代理<br />git config –global –unset http.proxy<br />&#x2F;&#x2F;取消https代理 <br />git config –global –unset https.proxy<br />部署时候不一定会跳出登录验证，因为跟着教程走已经把登录信息放在config里了，当时还傻傻不知道···</p>
<ol start="2">
<li>博客变成下载，是json设置的问题。</li>
</ol>
<p><a href="http://t.csdnimg.cn/23YrP">hexo踩坑之点击页面跳转变下载文件_hexo academian 的页内跳转-CSDN博客</a></p>
<ol start="3">
<li>hexo d之前要先装载如下命令<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="博客编写"><a href="#博客编写" class="headerlink" title="博客编写"></a>博客编写</h1><h2 id="语雀"><a href="#语雀" class="headerlink" title="语雀"></a>语雀</h2><p>好用的编辑器，已经陆陆续续使用近一年，学生能免费认证获取会员。支持各种小功能，谁用谁知道。<br />导出markdown放在本地仓库然后进一步deploy。</p>
<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><h2 id="前期尝试"><a href="#前期尝试" class="headerlink" title="前期尝试"></a>前期尝试</h2><p>picgo+国外某免费图床&#x2F;github图床&#x2F;Telegraph-image图床<br />结果就是picgo上传不了，网络问题？遂不弄了，直接手动用自己的Telegraph-image图床。<br /><img src="https://imagebed-c8c.pages.dev/file/9531029aa4f240bf11a1d.png"></p>
<h2 id="目前方案"><a href="#目前方案" class="headerlink" title="目前方案"></a>目前方案</h2><p>使用cloudflare部署Telegraph-image图床。具体操作也是看b站的一些教程：<br /><a href="https://www.bilibili.com/video/BV13N411z7Lu/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">无限空间的免费图床，感谢cloudflare</a></p>
<p>7.2日当天部署完毕：遇到一些问题。只能截图上传，本地突然上传失败。</p>
<h1 id="小功能的部署"><a href="#小功能的部署" class="headerlink" title="小功能的部署"></a>小功能的部署</h1><h2 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h2><p>使用hexo-generator-searchdb<br><a href="https://github.com/next-theme/hexo-generator-searchdb">hexo-generator-searchdb</a></p>
<h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><p>使用hexo-wordcount，这些基本上都是butterfly官方提供的推荐插件，不多赘述了。</p>
]]></content>
  </entry>
</search>
