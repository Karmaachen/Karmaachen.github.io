<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Codeforces Round &#92;#956 Div.2 and ByteRace 2024</title>
    <url>/2024/07/Codeforces-Round-956-Div-2-and-ByteRace-2024/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月7日22:35<br /><img src="https://imagebed-c8c.pages.dev/file/084b46ab8a6c7d4c5e659.png" alt="image.png"></p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="A-Array-Divisibility"><a href="#A-Array-Divisibility" class="headerlink" title="A - Array Divisibility"></a><a href="https://codeforces.com/contest/1983/problem/A">A - Array Divisibility</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给出数组长度，找这样一个数组：下标为K的倍数，它们的和是K的倍数。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>直接12345678·····</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i++)&#123;</span><br><span class="line">        a[i]=i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n;i++)&#123;</span><br><span class="line">        cout &lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>给出操作之前的网格和操作之后的网格，能使用任意次数如下操作：</p>
<ol>
<li>在网格中选取任何具有长度和宽度的子矩形</li>
<li>子矩形有四个角。取所选子矩形的任意一对对角线相对的角，并向它们的值相加1再模3</li>
<li>对于未选择的一对角，在它们的值中加上2模3</li>
</ol>
<p>请你判断能否完成。 </p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>对于能完成该变化的矩阵每一列的和和每一行的和，在变化前后的差的绝对值模3都为0</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">501</span>;</span><br><span class="line"><span class="type">int</span> cha[N];</span><br><span class="line"><span class="type">int</span> cha2[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">memset</span>(cha, <span class="number">0</span>, <span class="built_in">sizeof</span>(cha));</span><br><span class="line">    <span class="built_in">memset</span>(cha2, <span class="number">0</span>, <span class="built_in">sizeof</span>(cha2));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> c;</span><br><span class="line">            cin &gt;&gt; c;</span><br><span class="line">            cha[j] += c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            cha2[i] += c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            cha[j] -= x-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            cha2[i] -= x - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(cha[j]) % <span class="number">3</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(cha2[i]) % <span class="number">3</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>刚开始少考虑对于每一行的和，没想到WA on test2了</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>三个数组，总和都一样，要找三个区间，每个区间都对应一个数组上的区间，不能有交集。让这三个区间上元素和的值都大于等于 一个区间的和&#x2F;3，向上取整。</p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>学习高手写法！参考jiangly<br />那很简单啊，只有一个排列吧，一个排列然后摊。 —–jiangly<br />从头开始，找到能大于sum&#x2F;3向上取整最小区间，如果剩下的第三个不可以，那这个区间划分就不行。执行6种情况的每一个区间划分（从头开始找最小，不是全部）。<br />代码细节比较多：用array，用next_permutation，用cout条件输出，用array存放l,r值</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;array&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">array&lt;vector&lt;<span class="type">int</span>&gt;, 3&gt; a;</span><br><span class="line">LL tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">    a[i].<span class="built_in">resize</span>(n);<span class="comment">//给vector设大小</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[j][i];</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;tot+=a[j][i];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    array&lt;<span class="type">int</span>, 3&gt; perm&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;<span class="comment">//代表a,b,c三个数组</span></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    array&lt;<span class="type">int</span>, 3&gt; l&#123;&#125;, r&#123;&#125;;</span><br><span class="line">    <span class="type">int</span> cur = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">        l[perm[i]] = cur + <span class="number">1</span>; <span class="comment">// 记录perm[i]的l边界</span></span><br><span class="line">        LL sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(sum&lt;(tot+<span class="number">2</span>)/<span class="number">3</span> &amp;&amp; cur&lt;n)&#123;</span><br><span class="line">            sum+=(a[perm[i]][cur++]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum&lt;(tot+<span class="number">2</span>)/<span class="number">3</span>)&#123;</span><br><span class="line">            ok = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//没戏了</span></span><br><span class="line">        &#125;</span><br><span class="line">        r[perm[i]] = cur;<span class="comment">//记录perm[i]的r边界</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ok)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">            cout &lt;&lt; l[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;r[i]&lt;&lt;<span class="string">&quot; \n&quot;</span>[i==<span class="number">2</span>];<span class="comment">//方括号内为1时，相当于输出换行，否则输出空格</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(perm.<span class="built_in">begin</span>(),perm.<span class="built_in">end</span>()));</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p><strong>开LL!开LL!还有，以后用C++20吧···</strong><br />刚开始想的是前缀和+双指针，以为比赛时候能做出来。结果补题时候发现这个双指针太慢了····，本质上还是暴力。<br />TLE on test 3 了，不出所料。<br />后来发现我这种做法需要根据数组和当前值来变化长度。<br />先找到前两个区间满足条件的最小区间，之后剩下的区间就直接判断就可以了。<br />丑陋的写法：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int LL</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">c</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> aa;</span><br><span class="line">        cin &gt;&gt; aa;</span><br><span class="line">        sum += aa;</span><br><span class="line">        a[j] = aa + a[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="type">int</span> target = (<span class="number">2</span> + sum) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> bb;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; bb;</span><br><span class="line">        b[j] = bb + b[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cc;</span><br><span class="line">        cin &gt;&gt; cc;</span><br><span class="line">        c[j] += cc + c[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 1 to l, l+1 to r, r+1 to n</span></span><br><span class="line"><span class="keyword">while</span>(r&lt;n)&#123;</span><br><span class="line">    <span class="type">int</span> sum1 = a[l],sum2 =b[r]-b[l],sum3 = c[n] - c[r];</span><br><span class="line">    <span class="keyword">if</span>(sum1&lt;target)&#123;</span><br><span class="line">        l++;</span><br><span class="line">        <span class="keyword">if</span>(l&gt;r)</span><br><span class="line">            r++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum2&lt;target)&#123;</span><br><span class="line">        r++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum3 &gt;= target)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>, <span class="number">1</span>, l, l + <span class="number">1</span>, r, r + <span class="number">1</span>, n);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum1 = b[l], sum2 = a[r] - a[l], sum3 = c[n] - c[r];</span><br><span class="line">        <span class="keyword">if</span> (sum1 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span> (l &gt; r)</span><br><span class="line">                r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum2 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum3 &gt;= target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>, l + <span class="number">1</span>, r, <span class="number">1</span>, l, r + <span class="number">1</span>, n);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum1 = c[l], sum2 = b[r] - b[l], sum3 = a[n] - a[r];</span><br><span class="line">        <span class="keyword">if</span> (sum1 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span> (l &gt; r)</span><br><span class="line">                r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum2 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum3 &gt;= target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>, r + <span class="number">1</span>, n, l + <span class="number">1</span>, r, <span class="number">1</span>, l);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum1 = c[l], sum2 = a[r] - a[l], sum3 = b[n] - b[r];</span><br><span class="line">        <span class="keyword">if</span> (sum1 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span> (l &gt; r)</span><br><span class="line">                r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum2 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum3 &gt;= target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>, l + <span class="number">1</span>, r, r + <span class="number">1</span>, n, <span class="number">1</span>, l);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum1 = a[l], sum2 = c[r] - c[l ], sum3 = b[n] - b[r];</span><br><span class="line">        <span class="keyword">if</span> (sum1 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span> (l &gt; r)</span><br><span class="line">                r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum2 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum3 &gt;= target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>, <span class="number">1</span>, l, r + <span class="number">1</span>, n, l + <span class="number">1</span>, r);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum1 = b[l], sum2 =c[r] - c[l], sum3 = a[n] - a[r];</span><br><span class="line">        <span class="keyword">if</span> (sum1 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span> (l &gt; r)</span><br><span class="line">                r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum2 &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum3 &gt;= target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d %d\n&quot;</span>, r + <span class="number">1</span>, n, <span class="number">1</span>, l, l + <span class="number">1</span>, r);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>div2</tag>
        <tag>题解</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>Latex学习过程</title>
    <url>/2024/07/Latex%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="1-安装texlive"><a href="#1-安装texlive" class="headerlink" title="1.安装texlive"></a>1.安装texlive</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/ctan/systems/texlive/Images/">Index of &#x2F;ctan&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F; | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a><br />踩坑：不能有中文路径！直接让我去改了系统用户名。</p>
<h2 id="2-配置latex到vscode"><a href="#2-配置latex到vscode" class="headerlink" title="2.配置latex到vscode"></a>2.配置latex到vscode</h2><p><a href="https://blog.csdn.net/qq_41554005/article/details/120712126">VSCODE 安装LATEX环境，参数配置，常见问题解决_vscode安装latex环境,参数配置,常见问题解决-CSDN博客</a></p>
<h2 id="3-解决问题"><a href="#3-解决问题" class="headerlink" title="3.解决问题"></a>3.解决问题</h2><p><a href="https://blog.csdn.net/qq_41554005/article/details/120705231">Latex 报错 LaTeX Error: The font size command \normalsize is not defined问题解决_documentclass{article}出错-CSDN博客</a></p>
<h1 id="获取模板"><a href="#获取模板" class="headerlink" title="获取模板"></a>获取模板</h1><p>微信公众号数模加油站。<br>看到一个 非官方版辽宁省数学建模竞赛论文latex模板：<br><a href="https://github.com/JohnsonLo00/lnumcmthesis">https://github.com/JohnsonLo00/lnumcmthesis</a></p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>前提，要先编译一遍产生对应关系。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Ctrl+Alt+J</span><br></pre></td></tr></table></figure>
<p>从.tex搜索到pdf</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Ctrl+左键</span><br></pre></td></tr></table></figure>
<p>从pdf搜索到.tex</p>
<h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h2><p>%，用百分号注释，后面的内容都会被注释掉，Pdf不会显示<br />\，用来表示一个符号，反义字符<br />&amp;，对齐<br />$，数学公式标记符，两个之间是公式<br />~，保留强制空格<br />^和_，上下标<br />{和}，整体<br />#，宏包</p>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>\ <br />\newline<br />\linebreak<br />等</p>
<h2 id="分段"><a href="#分段" class="headerlink" title="分段"></a>分段</h2><p>\par</p>
<h2 id="正文标题"><a href="#正文标题" class="headerlink" title="正文标题"></a>正文标题</h2><p>chapter章节，不怎么用<br />section节<br />subsection小节<br />subsubsection小小节<br />\subsection{标题}</p>
<h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><h2 id="一般公式"><a href="#一般公式" class="headerlink" title="一般公式"></a>一般公式</h2><ol>
<li><p>短公式：$公式$</p>
</li>
<li><p>独立行的、带行号的公式：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span> &#123;equation&#125; <span class="keyword">\label</span>&#123;给这个公式起个名字（标签），方便引用&#125;</span><br><span class="line">......</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>无编号公式</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>公式<span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\[</span>公式<span class="keyword">\]</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>引用公式</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\autoref</span>&#123;label&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="多行公式"><a href="#多行公式" class="headerlink" title="多行公式"></a>多行公式</h2><p>依赖包amsmath</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br></pre></td></tr></table></figure>
<p>得在公式中加入\begin{split}和\end{split}，这样就能用换行符号了</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;<span class="keyword">\label</span>&#123;eq0&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;split&#125;</span><br><span class="line">    A+B+C+D<span class="keyword">\\</span></span><br><span class="line">    =E+F<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;split&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure>

<h2 id="分情况讨论"><a href="#分情况讨论" class="headerlink" title="分情况讨论"></a>分情况讨论</h2><ul>
<li>属于多行公式的一种，同样要依赖包amsmath。</li>
<li>使用\begin{cases}…\end{cases}</li>
<li>\text{ }，当你需要正文样式时候。<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">分情况公式<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;<span class="keyword">\label</span>&#123;eqcc&#125;</span><br><span class="line">    F(x)=</span><br><span class="line">    <span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">        0,<span class="built_in">&amp;</span><span class="keyword">\text</span>&#123;if <span class="built_in">$</span>x&lt;0<span class="built_in">$</span>&#125;<span class="keyword">\\</span></span><br><span class="line">        x+1,<span class="built_in">&amp;</span><span class="keyword">\text</span>&#123;if <span class="built_in">$</span>x<span class="keyword">\ge</span> 0 <span class="keyword">\cap</span> x<span class="keyword">\le</span> 3<span class="built_in">$</span>&#125;<span class="keyword">\\</span></span><br><span class="line">        x<span class="built_in">^</span>2,<span class="built_in">&amp;</span><span class="keyword">\text</span>&#123;if <span class="built_in">$</span>x&gt;3<span class="built_in">$</span>&#125;<span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;cases&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br></pre></td></tr></table></figure>
<img src="https://imagebed-c8c.pages.dev/file/847693923e1a2d7bde5fb.png" alt="image.png"><br>AxMath+LaTeX，更加强大！(-36￥)</li>
</ul>
<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p>依赖包：graphicx</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[!h]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=0.6<span class="keyword">\textwidth</span>]&#123;smokeblk&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;电路图&#125;</span><br><span class="line">    <span class="keyword">\label</span>&#123;fig:circuit-diagram&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure>
<p>begin那一行的htbp非常有用，</p>
<ul>
<li>h：当前位置，当图形放置在正文文本中给出该图形环境的地方，若本页所剩的页面不够，这一参数就将不起作用；剩余的页面将由该正文文本之后的文本补全，图片下移到下一页顶部。</li>
<li>但是使用 H 可以强制使该图片在该正文文本之后，本页剩余页面为空，图片在下一页顶部。</li>
<li>t：顶部，图形放置在页面顶部。</li>
<li>b：底部，图形放置在页面底部。</li>
<li>p:浮动页，图形放置在允许有浮动对象的页面上。</li>
<li>! 表示忽略一些浮动体的严格规则</li>
<li>一般使用H或者h即可</li>
<li>例如，\begin{figure}[htbp]表示在尽量放在当前位置，如果不行就放在页面顶部，底部，或者单独一页</li>
</ul>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p><img src="https://imagebed-c8c.pages.dev/file/366f6876a4feee3ef5897.png" alt="image.png"><br /></p>
<p>在线网站：<a href="https://www.latex-tables.com/">LaTeX Tables Editor</a><br />方便得很</p>
<h1 id="引用文献"><a href="#引用文献" class="headerlink" title="引用文献"></a>引用文献</h1><p>bibliography（谐音：摆布里奥g挼费）</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;9&#125;<span class="comment">%宽度9</span></span><br><span class="line">    <span class="keyword">\bibitem</span>[1]&#123;liuhaiyang2013latex&#125;</span><br><span class="line">    刘海洋.</span><br><span class="line">    <span class="keyword">\newblock</span> <span class="keyword">\LaTeX</span> &#123;&#125;入门<span class="keyword">\allowbreak</span>[J].</span><br><span class="line">    <span class="keyword">\newblock</span> 电子工业出版社, 北京, 2013.</span><br><span class="line">    <span class="keyword">\bibitem</span>[2]&#123;mathematical-modeling&#125;</span><br><span class="line">    全国大学生数学建模竞赛论文格式规范 (2020 年 8 月 25 日修改).</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br></pre></td></tr></table></figure>
<p>正文中：\cite{2}</p>
<p>使用bibtex引用条目<br />新建文件后缀.bib</p>
<p>开头加依赖包</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\bibliographystyle</span>&#123;unsrt&#125;</span><br></pre></td></tr></table></figure>
<p>结尾加参考文献文件</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\bibliography</span>&#123;example.bib&#125;</span><br></pre></td></tr></table></figure>
<p>去文件中复制粘贴引用。<br />这部分没搞明白，先用简单方法。</p>
<p>cite和upcite有区别，upcite在右上角<br />upcite需要：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\upcite</span>&#125;[1]&#123;<span class="keyword">\textsuperscript</span>&#123;<span class="keyword">\cite</span>&#123;<span class="params">#1</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>但是模板引用过这个包了？母鸡。</p>
<h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>1.溢出换行<br /><a href="http://t.csdnimg.cn/ljE3y">Latex warning：Underfull \hbox (badness 10000) in paragraph at lines 如何解决？_latex underfull-CSDN博客</a><br />2.引用找不到。解决方法，多编译几次。<br />3.报错消不掉，退出重进。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Latex</tag>
        <tag>学习</tag>
        <tag>论文</tag>
      </tags>
  </entry>
  <entry>
    <title>配置 Linux 和 深度学习 记录</title>
    <url>/2024/07/Linux-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>受限于博客写作环境，此篇博客可能不完整，仅记录一些自己感兴趣的点。<br>条件：双系统Windows 11+Ubuntu 20.04<br />拯救者R9000P 2021 RTX3070+AMD5800H</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://www.bilibili.com/video/BV1wo4y177Gk/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">手把手教你安装双系统 windows11+ubuntu 22.04(1)_哔哩哔哩_bilibili</a><br />使用rufus4.5制作系统盘</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><a href="http://t.csdnimg.cn/Y2DYi">解决Win10+Ubuntu18.04双系统安装中的花屏问题_ubuntu安装双系统花屏-CSDN博客</a></p>
<h1 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h1><h2 id="微信"><a href="#微信" class="headerlink" title="微信"></a>微信</h2><p><a href="https://zhuanlan.zhihu.com/p/690854988">2024如何在Ubuntu上安装原生微信wechat weixin</a></p>
<h2 id="搜狗输入法"><a href="#搜狗输入法" class="headerlink" title="搜狗输入法"></a>搜狗输入法</h2><p> <br /><a href="https://www.bilibili.com/video/BV1qZ4y1q7Zr/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">搭建舒适的Ubuntu使用环境系列——Linux系统上安装应用的通用方法（MATLAB、搜狗输入法、钉钉安装为例）_哔哩哔哩_bilibili</a></p>
<h1 id="深度学习实验配置过程"><a href="#深度学习实验配置过程" class="headerlink" title="深度学习实验配置过程"></a>深度学习实验配置过程</h1><p><a href="https://www.bilibili.com/video/BV1Mh4y1n7va/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">手把手教你安装双系统 windows11+ubuntu 22.04(2)配置基础的深度学习环境_哔哩哔哩_bilibili</a></p>
<p><strong>还未配置docker&#x2F;conda&#x2F;anaconda等环境管理工具！！！！！</strong></p>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p>ubuntu 20.04&lt;br &#x2F;&gt;RTX3070laptop<br />cuda 11.8<br />pytorch 2.3.0<br />cuDNN 9.2.1</p>
<h2 id="yolov8基本环境配置过程"><a href="#yolov8基本环境配置过程" class="headerlink" title="yolov8基本环境配置过程"></a>yolov8基本环境配置过程</h2><p>看的最多的就是版本问题，生怕安装版本冲突。（看了很多，列举不完整，包括官方的文档和引导）<a href="https://blog.csdn.net/qq_41225961/article/details/135745674">【一文搞懂—防止踩坑】深度学习环境配置:CUDA、cuDNN、算力 和 PyTorch 版本选择、详细教程案例(仔细阅读，建议收藏)_cuda版本和pytorch版本-CSDN博客</a><br />下面是一些具体环境的安装。<br /><a href="https://www.bilibili.com/video/BV1cW4y1M7Vc/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">从零安装深度学习开发环境（ubuntu20.04+nv驱动+pytorch）_哔哩哔哩_bilibili</a><br /> <a href="https://www.bilibili.com/video/BV1G8411S7Vk/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">Ubuntu22下安装YoloV8环境_哔哩哔哩_bilibili</a></p>
<h2 id="7月5日晚初步探索训练数据集"><a href="#7月5日晚初步探索训练数据集" class="headerlink" title="7月5日晚初步探索训练数据集"></a>7月5日晚初步探索训练数据集</h2><h3 id="获取数据集"><a href="#获取数据集" class="headerlink" title="获取数据集"></a>获取数据集</h3><p><a href="https://opendatalab.org.cn/BoosCrob/FallDet1000/cli/main">OpenDataLab 引领AI大模型时代的开放数据平台</a></p>
<h3 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h3><p><a href="https://www.bilibili.com/video/BV1qm411C7Mw/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">小白别错过！如何使用YOLOv8训练自己的数据集（带附件）_哔哩哔哩_bilibili</a><br />不会写python，用gpt4o引导写出了能用的，还挺好用！！！</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><br /></h2>]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Codeforces Round 949 (Div. 2)</title>
    <url>/2024/07/VP-Codeforces-Round-949-Div-2/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月5日8:00<br />备注：太难了这场，盯着开赛情况看不对劲，B题又是不熟悉的位运算，想了一小时果断看题解cheat了，狼狈的交了B题。<br />情况：<br /><img src="https://imagebed-c8c.pages.dev/file/37d9c78c1c2006ae949c3.png" alt="image.png"><br /></p>
<h2 id="A-Turtle-and-Piggy-Are-Playing-a-Game"><a href="#A-Turtle-and-Piggy-Are-Playing-a-Game" class="headerlink" title="A - Turtle and Piggy Are Playing a Game"></a><a href="https://codeforces.com/contest/1981/problem/A">A - Turtle and Piggy Are Playing a Game</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>区间内选一个整数，看最多被任何数整除多少次。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>看了用例，然后想了下感觉和2的n次方有关。找区间内2的n次方的最大n，输出n-1。竟然过了。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt;r;</span><br><span class="line">    <span class="type">int</span> target = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>;<span class="built_in">pow</span>(<span class="number">2</span>,i) &lt;=r;i++)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">pow</span>(<span class="number">2</span>, i) &lt; l)</span><br><span class="line">        &#123;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        target = i;</span><br><span class="line">        cout &lt;&lt; target<span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//很笨的__lg()函数写法....但好像没弄好外部库，也没了解。</span></span><br><span class="line"><span class="comment">//好像直接用logb这个函数也可以。</span></span><br></pre></td></tr></table></figure>

<p>其他人的手写写法：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>((<span class="number">1ll</span>&lt;&lt;target)&lt;=r)</span><br><span class="line">        target++;</span><br><span class="line">    cout &lt;&lt; target<span class="number">-1</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>一个无限序列$a_n &#x3D; n$<br />每次操作，同时变化：<br />$a_i &#x3D; a_{i-1}|a_{i}|a_{i+1}$<br />| 是 按位或<br />输出$a_n$在第m次变化后的值。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>每个位置的值的范围是:<br />左边界：max（0，n-m）<br />右边界：n+m<br />左边界肯定比右边界小。<br />区间按位或有如下结论：<br />从左往右！找到第一位left为0，且right为1的。该位右边全部取1，即为最终结果。<br />代码中用r|(2^(i+1)-1)</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="built_in">max</span>(<span class="number">0</span>, n -m);</span><br><span class="line">    <span class="type">int</span> right = m + n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">30</span>; i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((right &gt;&gt; i &amp; <span class="number">1</span>) &amp;&amp; !(left &gt;&gt; i &amp; <span class="number">1</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; (((<span class="number">1ll</span> &lt;&lt; i + <span class="number">1</span>) - <span class="number">1</span>)| left) &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>想到了传染，但位运算实在不熟练，也没推出来结论。</p>
<h2 id="不补了，去学位运算了。"><a href="#不补了，去学位运算了。" class="headerlink" title="不补了，去学位运算了。"></a>不补了，去学位运算了。</h2>]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>div2</tag>
        <tag>题解</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Codeforces Round 950 (Div. 3)</title>
    <url>/2024/07/VP-Codeforces-Round-950-Div-3/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月6日21:30<img src="https://imagebed-c8c.pages.dev/file/5342fee7064f46e32199f.png" alt="image.png"><br /></p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="A-Problem-Generator"><a href="#A-Problem-Generator" class="headerlink" title="A - Problem Generator"></a><a href="https://codeforces.com/contest/1980/problem/A">A - Problem Generator</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给出轮数，一些现有的代表问题难度的字符串，要求ABCDEFG每个难度乘轮次要够，至少要添加几个问题数量。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>简单题，统计一下现在有多少个计数，求和缺了多少。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">2000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="type">int</span> num = s - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        a[num] += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m - a[i] &gt; <span class="number">0</span>)</span><br><span class="line">            ans += m - a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>刚开始循环条件写错了wa1.不能无脑补全！而且竟然CPH过了就离谱。</p>
<h2 id="B-Choosing-Cubes"><a href="#B-Choosing-Cubes" class="headerlink" title="B - Choosing Cubes"></a><a href="https://codeforces.com/contest/1980/problem/B">B - Choosing Cubes</a></h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>带索引的一些立方体，会有一个喜欢的立方体，每个立方体生成一个数字。按数字递减排列后，删除前k个最大的立方体。判断喜欢的立方体是否被删去：YES、NO、MAYBE</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>sorting题</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, f, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; f &gt;&gt; k;</span><br><span class="line">    PII p[N];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;cin &gt;&gt; p[i].first;p[i].second = i;&#125;</span><br><span class="line">    <span class="built_in">sort</span>(p + <span class="number">1</span>, p + n + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> aft = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i].second==f)</span><br><span class="line">            aft = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p[n-k+<span class="number">1</span>].first&gt;p[aft].first)cout &lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (p[n - k + <span class="number">1</span>].first == p[aft].first &amp;&amp; p[n - k].first == p[aft].first)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;MAYBE&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-Sofia-and-the-Lost-Operations"><a href="#C-Sofia-and-the-Lost-Operations" class="headerlink" title="C - Sofia and the Lost Operations"></a><a href="https://codeforces.com/contest/1980/problem/C">C - Sofia and the Lost Operations</a></h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>给出改之前的数组和改之后的数组，并给出改的值，但不知道改的位置，问你改的值能否产生一种方案完成从改之前到改之后。</p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>比赛中：<br />先找需要改哪些值。<br />产生一个需要的数组。<br />找最后的值(m-1)在不在这个需要的数组。因为这个值一定会最后修改<br />找需要改的值在不在d中<br />少给了绝对不可以。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ann</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">bnn</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; ann[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; bnn[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnn</span><span class="params">(m)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; cnn[i];</span><br><span class="line">    &#125;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        mp[bnn[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mp[cnn[m - <span class="number">1</span>]] == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ann[i] != bnn[i])</span><br><span class="line">        &#123;</span><br><span class="line">            mp2[bnn[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp2[cnn[i]] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mp2[cnn[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : mp2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (y != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其实不用开第一个Map的，写的有点麻烦了</p>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>这题问题很多<br />1、开数组过大，解决方法：全局数组+memset<br />2、TLE on test 2 了，没办法，改用map和vector来优化了。<br /><a href="http://t.csdnimg.cn/vbhc1">C++中的map用法详解_c++ map-CSDN博客</a><br /><a href="http://t.csdnimg.cn/23t2s">C++ for auto用法以及map利用迭代器赋值_for auto map-CSDN博客</a></p>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>题解</tag>
        <tag>div3</tag>
        <tag>map</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Codeforces Round 951 (Div.2)</title>
    <url>/2024/07/VP-Codeforces-Round-951-Div-2/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月4日13:45<br /><br><img src="https://imagebed-c8c.pages.dev/file/f2b8af4f1d96ba92902a5.png" alt="image.png"><br />C题wa3发。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="A-Guess-the-Maximum"><a href="#A-Guess-the-Maximum" class="headerlink" title="A - Guess the Maximum"></a><a href="https://codeforces.com/contest/1979/problem/A">A - Guess the Maximum</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>一个人说一个数K，另一个人在一串数组中找一个区间，如果这个区间最大值严格大于K，符合要求。找出最小的k</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>所有长度为2的区间最大值的最小值严格大于K。也就是K取所有长度为2的区间元素最大值的最小值-1</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">10e9</span>;</span><br><span class="line">    cin &gt;&gt; a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n;i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="type">int</span> k = <span class="built_in">max</span>(a[i<span class="number">-1</span>], a[i]);</span><br><span class="line">        ans = <span class="built_in">min</span>(k, ans);</span><br><span class="line">        &#125;</span><br><span class="line">            cout &lt;&lt; ans<span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B-XOR-Sequences"><a href="#B-XOR-Sequences" class="headerlink" title="B - XOR Sequences"></a><a href="https://codeforces.com/contest/1979/problem/B">B - XOR Sequences</a></h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>位异或运算：XOR，运算符为^，公式符号为⊕</p>
<p>有两个无限长序列a,b.<br />$𝑎_𝑛&#x3D;𝑛⊕𝑥\<br>𝑏_𝑛&#x3D;𝑛⊕𝑦$<br />提供x和y的值，寻找$a_n\text{和}b_n\text{的最长公共子串}$</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>我们要寻找的子串，每一位n满足下面（i和j对应序列a和b中的位置）：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">i^x = j^y </span><br><span class="line">i   = j^y^x = j^x^y</span><br><span class="line">i^j=x^y    </span><br></pre></td></tr></table></figure>
<p>无限子序列，i^j<br />把 x^y写为 k(定值)<br />当i+1,j+1时候，发现同时加一，如果加一影响的下一位是同，对是否等于k没有影响（还是k）<br />直到i+a,j+a遇到非同的位。<br />最终就是，输出x^y的lowbit(遇到第一个为1的位置表示的数)<br /><a href="http://t.csdnimg.cn/RM2SS">每日一个算法知识点 - lowbit方法-CSDN博客</a><br /><a href="http://t.csdnimg.cn/rMyQh">详解x&amp;(-x)以及x&amp;(x-1)_x &amp; (~x + 1) &#x3D; x &amp; (-x)-CSDN博客</a></p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    x ^= y;</span><br><span class="line">    cout &lt;&lt; (x&amp;(-x))&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>没思路，位运算很不熟练，也没动笔</p>
<h2 id="C-Earning-on-Bets"><a href="#C-Earning-on-Bets" class="headerlink" title="C - Earning on Bets"></a><a href="https://codeforces.com/contest/1979/problem/C">C - Earning on Bets</a></h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>给出一个数组，对应若干结果，代表着赢的时候一个硬币能赚的值。只有一个结果能赢。任意分配硬币，要保证每一个结果产生的赢得的值严格大于分配的总硬币数</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>首先想到的是，给的数组与分配硬币的比例有关。<br />观察用例，发现下面几个用例都是最小公倍数除以数组各值。<br />抄了一个算gcd循环的代码，如果使用最小公倍数的方案没有满足最小公倍数严格大于分配硬币之和，则不能成功，输出-1。否则输出分配方案。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">50</span> + <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> k[N];       <span class="comment">// given</span></span><br><span class="line"><span class="type">int</span> r[N] = &#123;<span class="number">1</span>&#125;; <span class="comment">// result</span></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL x, LL y)</span> <span class="comment">// 欧几里得算法求最大公因数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL temp;</span><br><span class="line">    <span class="keyword">while</span> (y &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = x % y;</span><br><span class="line">        x = y;</span><br><span class="line">        y = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    LL ans[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    LL gcdres = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; k[i];</span><br><span class="line">        gcdres = gcdres * k[i] / <span class="built_in">gcd</span>(gcdres, k[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    LL sumc = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[i]=gcdres/k[i];sumc += ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sumc &gt;= gcdres)&#123;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;cout &lt;&lt; <span class="number">-1</span>;&#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>刚开始WA on test 2，面向用例解题了，两个-1的情况都是硬币和等于最小公倍数。<br />后来改条件还WA on test 4。改了LL再试一次，过了。<br />对于10e9的涉及增加的计算，还是得开LL。</p>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>div2</tag>
        <tag>题解</tag>
        <tag>位运算</tag>
        <tag>gcd</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Codeforces Round 953 (Div. 2)</title>
    <url>/2024/07/VP-Codeforces-Round-953-Div-2/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月1日 星期一 17:15<br />完成情况：<img src="https://imagebed-c8c.pages.dev/file/40cd392aed250647e3151.png"></p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="A-Alice-and-Books"><a href="#A-Alice-and-Books" class="headerlink" title="A. Alice and Books"></a>A. Alice and Books</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>将数分成两堆，选取每堆”最大数字”的书读。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>读题类题目，认真读了快十分钟做出来···，都以为是最大页数。最大数字必定看，因此找出最小到第二大数字中最大页数的书。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">101</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="type">int</span> c[N];</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            cin &gt;&gt; c[i];</span><br><span class="line">        <span class="built_in">sort</span>(c, c+n<span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        ans = c[n - <span class="number">1</span>] + c[n - <span class="number">2</span>];</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B-New-Bakery"><a href="#B-New-Bakery" class="headerlink" title="B. New Bakery"></a>B. New Bakery</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>卖东西，分为正常价格a和活动价格b，第k个活动价格为b−i+1。问最大的利润。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>初中函数题目，写出二次方程方程式：<br />$w&#x3D;-(0.5) * k^2 + (0.5 - a + b) * k + n * a$<br />当k&#x3D;（0.5-a+b)时候最大。<br />直接在周边几个整数比较大小。<br />分情况讨论：<br />先看是否b - n + 1 &gt; a，也就是说活动价永远比正常价格好。如果是，所有物品都用活动价卖出，k&#x3D;n;<br />如果不是这样：</p>
<ol>
<li>最大值的k小于等于0，k&#x3D;0;</li>
<li>最大值的k大于0，k取（0.5-a+b)，代入算出周边整数值最大情况。</li>
</ol>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">func</span><span class="params">(LL a, LL b, LL n, LL k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> -(<span class="number">0.5</span>) * k * k + (<span class="number">0.5</span> - a + b) * k + n * a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL n, a, b;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0.5</span> - a + b &gt; <span class="number">0</span> &amp;&amp; b - n + <span class="number">1</span> &lt; a)</span><br><span class="line">        &#123;</span><br><span class="line">            LL ans = <span class="built_in">max</span>(<span class="built_in">func</span>(a, b, n, (<span class="number">0.5</span> - a + b)), <span class="built_in">func</span>(a, b, n, (<span class="number">1.5</span> - a + b)));</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, (LL)<span class="built_in">func</span>(a, b, n, (<span class="number">-0.5</span> - a + b)));</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (b - n + <span class="number">1</span> &gt;= a)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">func</span>(a, b, n, n) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">func</span>(a, b, n, <span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>这题耽误太多时间（40分钟）的原因就是第一个if少了个b-n+1&lt;a，导致都用第一个算，有一个样例一直过大。要注意if条件对应的情况，划分要清楚。</p>
<h2 id="C-Manhattan-Permutations"><a href="#C-Manhattan-Permutations" class="headerlink" title="C. Manhattan Permutations"></a>C. Manhattan Permutations</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>一种算法，交换1,2,3,4,5···的顺序从而使|p1−1|+|p2−2|+…+|pn−n|&#x3D;一个值k。如果可行，输出Yes和交换后的顺序。如果不可行，输出No。</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>先讨论：</p>
<ol>
<li>k为奇数永远不可能，直接no</li>
<li>k为偶数：</li>
</ol>
<p>计算此时能表示的最大值（数学推等差数列）<br />如果k大了，no<br />如果没有大，进入下一阶段：<br />在原封不动的情况下，交换一次增长的值是2*交换两者下表的差。<br />因此直接依据此贪心，每个位置最多交换一次，用双指针从开头和结尾向中间遍历，进行交换，并更新到k还剩多少。<br />直到交换两者增长的值大于现在的需求了。改为移动一个指针，获取最后一次交换。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200001</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL n, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        LL max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            max = (n * <span class="number">0.5</span>) * (n * <span class="number">0.5</span>) * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            max = (n + <span class="number">1</span>) * <span class="number">0.5</span> * ((n + <span class="number">1</span>) * <span class="number">0.5</span> - <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (k &gt; max)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LL need = <span class="number">0.5</span> * k;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="type">int</span> r = n, l = <span class="number">1</span>; <span class="comment">// 双指针</span></span><br><span class="line">            <span class="type">int</span> ans[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[i] = i;</span><br><span class="line">            &#125;</span><br><span class="line">             <span class="keyword">while</span> (r - l &lt;= need)</span><br><span class="line">             &#123;</span><br><span class="line">                <span class="type">int</span> t =ans[l];</span><br><span class="line">                ans[l] = ans[r];</span><br><span class="line">                ans[r] = t;</span><br><span class="line">                </span><br><span class="line">                     need =need- r + l;</span><br><span class="line">                     l++;</span><br><span class="line">                     r--;</span><br><span class="line">                     <span class="keyword">if</span>(need == <span class="number">0</span>)&#123;</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">             &#125;</span><br><span class="line">              <span class="keyword">while</span> (need != <span class="number">0</span>)&#123;</span><br><span class="line">               l++;</span><br><span class="line">               <span class="keyword">if</span> (r - l == need)&#123;</span><br><span class="line">               <span class="built_in">swap</span>(ans[l], ans[r]);</span><br><span class="line">               need -= r - l;&#125;</span><br><span class="line">               &#125;</span><br><span class="line">             <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">             &#123;</span><br><span class="line">                 cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>这个过程耗时最大的就是第一个while一直输出不出来，直到后来在循环中加了一个break检测：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(need == <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也就是一阶段就成功的情况没考虑，导致第一个用例就过不了。后面也是极限救场了，凭感觉写的贪心哭着也要写完。</p>
<h2 id="D-Elections"><a href="#D-Elections" class="headerlink" title="D. Elections"></a>D. Elections</h2><p>赛后补一题。1600分。赛中也没来得及开。用时1小时，还挺满意的做出来了。</p>
<h3 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h3><p>有选举者按序号排序，每个选举者有固定票（粉丝）和犹豫票。犹豫者刚开始就有，会把票给序号最小（最左）者；排除一个选举者，他的粉丝全部变成犹豫票。<br />问你：如何排除最小数量的选举者，从而赢得选举？</p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>全是贪心，做烂了。<br />先遍历一遍，找到最大值所在处max。顺便搞个前缀和数组。<br />然后遍历选举者，分情况讨论：</p>
<ol>
<li>当前位置是max：<ol>
<li>第一位fans[1]加上犹豫者，fans[1]+c小于max，则一个也不用去掉，输出0；</li>
<li>第一位就是最大值，也输出0，不用去掉</li>
<li>fans[1]+c大于max，遍历maxwhere（max的位置,也就是现在看的位置)之前的选举者<ol>
<li>遍历过程中若发现c + sum[j] &lt; max，遍历结束，即去掉j之前的选举者，输出j-1</li>
<li>遍历到头，那就输出maxwhere-1，把之前的都去掉。</li>
</ol>
</li>
</ol>
</li>
<li>当前位置不是max，前面肯定都得去掉<ol>
<li>如果max的位置在这之前，那去掉了直接变成新的max，输出当前位置之前，i-1;</li>
<li>否则，在这之后，要考虑用不用把max去了，计算c + sum[i] &gt;&#x3D; max<ol>
<li>是，则证明不用去，输出i-1</li>
<li>否，则证明还是得把max去掉，输出i</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200001</span>;</span><br><span class="line">LL fans[N];</span><br><span class="line">LL c; <span class="comment">// undecided</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        LL sum[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; fans[i];</span><br><span class="line">            sum[i] = sum[i - <span class="number">1</span>] + fans[i];</span><br><span class="line">        &#125;</span><br><span class="line">        LL max = fans[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> maxwhere = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (max &lt; fans[i])</span><br><span class="line">            &#123;</span><br><span class="line">                max = fans[i];</span><br><span class="line">                maxwhere = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == maxwhere)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (c + fans[<span class="number">1</span>] &lt; max || maxwhere == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> yes = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; maxwhere; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (c + sum[j] &gt;= max)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            cout &lt;&lt; j - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                            yes = <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (yes != <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; maxwhere - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (maxwhere &lt; i)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; i - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (c + sum[i] &gt;= max)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; i - <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h3><p>令人感慨做的还挺丝滑的，不过就是忘开LL导致wa了一次，看了测试用例情况。要是比赛遇到不知道能不能反映过来···</p>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>div2</tag>
        <tag>题解</tag>
        <tag>贪心</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Codeforces Round 955(Div 2)</title>
    <url>/2024/07/VP-Codeforces-Round-955-Div-2/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月2日 星期二 16:25<br />完成情况：<br />只过了A····<br />B题TLE，第一个样例都没过。<br />C题卡在test 10 TLE。<br />总体表现很糟糕。<br /><br><img src="https://imagebed-c8c.pages.dev/file/26d8309dd5fd9ef052f3c.png"></p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="A-Soccer"><a href="#A-Soccer" class="headerlink" title="A - Soccer"></a><a href="https://codeforces.com/contest/1982/problem/A">A - Soccer</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>分析分心前比分和之后的比分，看这两个比分中途有没有可能两边产生打平的情况。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>比较简单，观察规律得只要有反超的情况，就一定会打平，直接if判断。</p>
<h2 id="B-Collatz-Conjecture"><a href="#B-Collatz-Conjecture" class="headerlink" title="B - Collatz Conjecture"></a><a href="https://codeforces.com/contest/1982/problem/B">B - Collatz Conjecture</a></h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>有一个变量 x 和一个常数 y。执行 k 次以下操作次数：</p>
<ul>
<li>x 增加 1 </li>
<li>判断数字 x 能被整 y 除时，将其除以 y 。能除一直除</li>
</ul>
<p>两个操作是算一次。<br />输出最后的x的值</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>有数学原型的题目。</p>
<p>根据题干和范围，这题肯定要用到数学知识。<br /><strong>有如下规律</strong>，当x到达1后，后面的操作就是一样的，将x加到y，然后又变为1，发现这一点是<strong>解题的关键</strong>。<br />之前的操作，就可以用模拟来完成。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL x, y, k;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        LL noww = x / y;</span><br><span class="line">        LL target = (noww + <span class="number">1</span>) * y;</span><br><span class="line">        <span class="keyword">if</span> (k+x &lt;= target )</span><br><span class="line">        &#123;</span><br><span class="line">            x += k;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">else</span>&#123;</span><br><span class="line">             k -= target - x;</span><br><span class="line">             x = target;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="keyword">while</span>(x%y==<span class="number">0</span>)&#123;</span><br><span class="line">            x = x / y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (k &gt; <span class="number">0</span> &amp;&amp; x&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">1</span>)&#123;</span><br><span class="line">        k %= (y - <span class="number">1</span>); <span class="comment">// 这里，出错！数学要严谨！</span></span><br><span class="line">        x += k;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>这题真是狼狈。<br />比赛时候，理解题目意思，就花了20分钟，一直纠结一次到底要做什么。<br />然后写代码，第一个样例过不了TLE。原因是全模拟了，没有用数学。<br />对着TLE思考，“这题应该得用数学吧”，结果写不出数学。因为前半段完全可以用模拟。<br />赛后补题，知道后半段要用数学，结果tmd直接拿x+k来模y，殊不知k每次减少的是4。这属实是凭感觉写了。<br />总结：模拟和数学结合！数学要弄明白了再写。<br />这里放tourist三分钟ac警示自己：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="type">int</span> tt;</span><br><span class="line">  cin &gt;&gt; tt;</span><br><span class="line">  <span class="keyword">while</span> (tt--) &#123;</span><br><span class="line">    <span class="type">int</span> x, y, k;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class="line">    <span class="keyword">while</span> (k &gt; <span class="number">0</span> &amp;&amp; x &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="type">int</span> rm = x % y;</span><br><span class="line">      <span class="keyword">if</span> (rm &lt; y - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">int</span> take = <span class="built_in">min</span>(y - <span class="number">1</span> - rm, k);</span><br><span class="line">        x += take;</span><br><span class="line">        k -= take;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      x += <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span> (x % y == <span class="number">0</span>) &#123;</span><br><span class="line">        x /= y;</span><br><span class="line">      &#125;</span><br><span class="line">      k -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">assert</span>(x == <span class="number">1</span>);</span><br><span class="line">      x = k % (y - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C-Boring-Day"><a href="#C-Boring-Day" class="headerlink" title="C - Boring Day"></a><a href="https://codeforces.com/contest/1982/problem/C">C - Boring Day</a></h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>有一副牌n张， 从顶部开始的第 i 张牌上写着一个数字 $a_i$。在每个回合中，他从牌组顶部取出非零数量的牌并完成该回合。如果在回合中收集到的牌上的数字之和介于左边界 l 和右边界 r 之间，则赢得该回合;否则，弃牌。<br />输出赢的回合总数。<br />给出n，l，r 和$a_i$：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3 10</span><br><span class="line">2 1 11 3 7</span><br></pre></td></tr></table></figure>
<p>上面用例2 1 ,3 ,7为赢的回合取的牌。答案为3</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>贪心，双指针<br />从前往后取牌，计算sum</p>
<ol>
<li>小于左边界，继续取，右指针继续往前，sum加上</li>
<li>大于右边界，左指针往前一格就行了，sum减去，相当于从多的开始找到1或3状态。</li>
<li>在左右之间，则能赢这回合，左右指针从右指针位置，开始新的回合。</li>
</ol>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100001</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        LL n, l, r;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        LL num[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        LL sum[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; num[i];</span><br><span class="line">            sum[i] = sum[i - <span class="number">1</span>] + num[i];</span><br><span class="line">        &#125;</span><br><span class="line">        LL p1 = <span class="number">1</span>, p2 = <span class="number">1</span>;LL ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (p1 &lt;=n)</span><br><span class="line">        &#123;</span><br><span class="line">            LL temp = sum[p2] - sum[p1 - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (temp &gt;= l &amp;&amp; temp &lt;= r)</span><br><span class="line">            &#123;</span><br><span class="line">                ans++;</span><br><span class="line">                p1 = p2 + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt; r)</span><br><span class="line">            &#123;</span><br><span class="line">                p1++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p2&lt;n)p2++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p1++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>这题比赛时候，在中途TLE；之后补题还TLE，从test 10 wa变成了test 17 wa，原因是：<br />以为自己用的是双指针，不过双的不够彻底！<br />特别是小于左边界那一块，只需动左指针就行了，因为如果动右指针还需重复计算，以为回归到左指针位置，还可能有一个牌赢得回合的可能，实际上，因为你超过的时候是一个边界状态，边界之前的情况都是小的，移动左指针更小，就不用重复计算。<br />比赛时候也是没想明白，并且还没有重复利用变量。</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>虽然看了题解，但是不想补了，构造题搭配gcd，以后巩固gcd时候再看一看。</p>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>div2</tag>
        <tag>题解</tag>
        <tag>双指针</tag>
        <tag>贪心</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows用户名从中文换成英文的过程以及后遗症记录</title>
    <url>/2024/07/Windows%E7%94%A8%E6%88%B7%E5%90%8D%E4%BB%8E%E4%B8%AD%E6%96%87%E6%8D%A2%E6%88%90%E8%8B%B1%E6%96%87%E7%9A%84%E8%BF%87%E7%A8%8B%E4%BB%A5%E5%8F%8A%E5%90%8E%E9%81%97%E7%97%87%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>“不要起中文用户名”，这应该是每个新电脑给用户的提示！</p>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>跟着如下视频操作，没有遇到任何问题。<br /><a href="https://www.bilibili.com/video/BV1w24y1t7WY/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">如何修改Windows系统中文账号名为英文，解决游戏报错问题_哔哩哔哩_bilibili</a></p>
<h1 id="后遗症记录"><a href="#后遗症记录" class="headerlink" title="后遗症记录"></a>后遗症记录</h1><h2 id="PR"><a href="#PR" class="headerlink" title="PR"></a>PR</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>pr之前的项目全部找不到素材···，用的还是我有中文用户名的路径。</p>
<h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><p>随缘，之前的项目留着也没用！</p>
<h2 id="sumatraPDF"><a href="#sumatraPDF" class="headerlink" title="sumatraPDF"></a>sumatraPDF</h2><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>用不了，pdf默认打开没了。之前的记录路径找不到。</p>
<h3 id="解决方式-1"><a href="#解决方式-1" class="headerlink" title="解决方式"></a>解决方式</h3><p>重装，一切正常</p>
<h2 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h2><h3 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h3><p>和sumatrapdf一样，感觉这种小软件都容易寄</p>
<h3 id="解决方式-2"><a href="#解决方式-2" class="headerlink" title="解决方式"></a>解决方式</h3><p>重装，一切正常</p>
<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><h3 id="问题-3"><a href="#问题-3" class="headerlink" title="问题"></a>问题</h3><p>博客更新不了，git找不到hexo命令了，促成写这篇文章的原因</p>
<h3 id="解决方式-3"><a href="#解决方式-3" class="headerlink" title="解决方式"></a>解决方式</h3><p>还好有人和我一样，写了博客！完美（？）解决<br /><a href="https://www.cnblogs.com/chouxianyu/p/11270055.html">bash: hexo: command not found - 臭咸鱼 - 博客园</a></p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Educational Codeforces Round 167 (Div. 2)</title>
    <url>/2024/07/VP-Educational-Codeforces-Round-167-Div-2/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年7月3日 星期三 16:25<br /><img src="https://imagebed-c8c.pages.dev/file/14b4fe75b3a54f614b411.png"></p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><a href="https://www.bilibili.com/video/BV1e4421S7k1/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">Educational Codeforces Round 167 (Rated for Div. 2)_哔哩哔哩_bilibili</a><br />mod jiangly</p>
<h2 id="A-Catch-the-Coin"><a href="#A-Catch-the-Coin" class="headerlink" title="A - Catch the Coin"></a><a href="https://codeforces.com/contest/1989/problem/A">A - Catch the Coin</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>人在中心点四面八方都能走，走一步，硬币y轴–。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>比赛时，还用数学算了一下,满足：<br />$y+|x|&gt;&#x3D;|x|-1$<br />能接住。<br />然后发现，这不就是<br />$y&gt;&#x3D;-1$</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span> (y+<span class="built_in">abs</span>(x)&gt;=<span class="built_in">abs</span>(x)<span class="number">-1</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B-Substring-and-Subsequence"><a href="#B-Substring-and-Subsequence" class="headerlink" title="B - Substring and Subsequence"></a><a href="https://codeforces.com/contest/1989/problem/B">B - Substring and Subsequence</a></h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>子字符串：连续的包含在一个字符串<br />子序列：从一个字符串中删去一些字符（可能不删）。<br />给出一个子字符串和子序列，找到最短的满足条件的字符串。<br />a必须连续出现，b是删去某些得到的结果。</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>这题急了没贪出来，没忍住cheat了。后来发现，思路反了<br />b的最长的子串是a的子序列 —-jiangly（没听懂）（后来听懂了）</p>
<p>但是贪心的思路就是，遍历b，找到b中，某个最长子串（连着）是在a中子序列（不需连续）<br />我当时怎么想着从最后一个开始对齐，真服了。回过头来看绝对蠢死。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><p>by jiangly</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="type">int</span> add = b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b.<span class="built_in">size</span>();i++)   </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> k = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; a.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k&lt;b.<span class="built_in">size</span>()&amp;&amp;a[j]==b[k])&#123;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, i + (<span class="type">int</span>)(b.<span class="built_in">size</span>()) - k); <span class="comment">// b的最长的子串是a的子序列</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; add +a.<span class="built_in">size</span>()&lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-Two-Movies"><a href="#C-Two-Movies" class="headerlink" title="C - Two Movies"></a><a href="https://codeforces.com/contest/1989/problem/C">C - Two Movies</a></h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>两个电影。若干人，一人对每个电影都有一个评价（1,0,-1），你选择一个电影评价，两个电影的得分的最小值为最终评分。找出最终评分的最大值。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>比赛时候：贪心，全用if写，过用例就算成功。结果喜闻乐见：wa on test 2<br />jiangly：谁大加谁<br />如果一样，如果是1，有一个加1的机会。如果是-1，先都减1，再增加一个加一的机会。<br />输出A+C，B+C，A+B+C &gt;&gt;1的最小值（为什么这是对的？）（因为思想就是要在这两个一样的时候，是二者最小值的最大值，向下取整，取更小的那一个）<br>右移1位相当于除以2，这个只有正数适用，而负数不适用。重要！涉及到取整问题。 负奇数除二是向上取整！<br>[CSDN相关文章]<a href="http://t.csdnimg.cn/vaJDN">http://t.csdnimg.cn/vaJDN</a></p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2</span> * <span class="number">10e5</span> + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>, C = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      </span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; b[i])</span><br><span class="line">        &#123;</span><br><span class="line">            A += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i] &lt; b[i])</span><br><span class="line">        &#123;</span><br><span class="line">            B += b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            C++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            C++;</span><br><span class="line">            A--;</span><br><span class="line">            B--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans = <span class="built_in">min</span>(A + C, <span class="built_in">min</span>(B + C, (A + B + C) &gt;&gt;<span class="number">1</span>));<span class="comment">//右移1位相当于除以2，这个只有正数适用，而负数不适用。重要！</span></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>贪错了，用栈的思想不对。</p>
<h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><ol>
<li>alt 键可以生成多个光标。</li>
<li>用signed main，然后可以定义：#define int LL</li>
<li>多个值比较<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> max_of_three = std::<span class="built_in">max</span>(&#123;p, q, r&#125;);</span><br><span class="line"><span class="type">int</span> min_of_three = std::<span class="built_in">min</span>(&#123;p, q, r&#125;);</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>div2</tag>
        <tag>题解</tag>
        <tag>贪心</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>VP Codeforces Round 954 Div. 3</title>
    <url>/2024/07/VP-Codeforces-Round-954-Div-3/</url>
    <content><![CDATA[<h1 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h1><p>时间：2024年6月30日 星期日 23:28 <br />备注：暑假第一场VP，蓝桥杯之后基本没有做过题，cf的板子也没有准备，因此开了一次div3试试水。结果也是出奇的烂啊，只开了前4题，第四题还因为越做越乱而没有做完。<br />完成情况：<br /><img src="https://imagebed-c8c.pages.dev/file/d65af6afc4119a77c5466.png"><br />8684</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="A："><a href="#A：" class="headerlink" title="A："></a>A：</h2><p>三点求绝对值，没啥难度；</p>
<h2 id="B：Matrix-Stabilization"><a href="#B：Matrix-Stabilization" class="headerlink" title="B：Matrix Stabilization"></a>B：Matrix Stabilization</h2><p>一个简单的贪婪题，按照序号每次找周围元素的最小值然后赋值即可。<br /><img src="/images/image2.png" alt="image2.png"><br />感觉有更简便的形式，之后记得看竞速大佬的代码。</p>
<h2 id="C：Update-Queries"><a href="#C：Update-Queries" class="headerlink" title="C：Update Queries"></a>C：Update Queries</h2><p>又是一道贪心。</p>
<h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给出一组索引（指向原字符串位置），和一组备选字母，调整顺序，修改原来的字符串，从而使原来的字符串可以达到字典序最小值。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>给备选字母排序，每个需要修改的位置，从高到低给予能给的最小字典序字母即可。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n, m;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="type">char</span> target[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; target[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> s[N];</span><br><span class="line">        <span class="type">bool</span> exist[N] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; s[i]; <span class="comment">// 索引</span></span><br><span class="line">            exist[s[i]] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> p[N];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; p[i]; <span class="comment">// 备选</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(s + <span class="number">1</span>, s + m + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">sort</span>(p + <span class="number">1</span>, p + m + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// process</span></span><br><span class="line">        <span class="type">int</span> in = <span class="number">1</span>; <span class="comment">// 备选</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (exist[i])</span><br><span class="line">            &#123;</span><br><span class="line">                target[i] = p[in];</span><br><span class="line">                in++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// cout</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; target[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>33行中的if条件刚开始还限制非常多，想着什么必须要在索引排序后交接处啥的···，其实完全没有用。不谈了</p>
<h1 id="D：Mathematical-Problem"><a href="#D：Mathematical-Problem" class="headerlink" title="D：Mathematical Problem"></a>D：Mathematical Problem</h1><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>提供数字字符串，及其长度n。要求添加n-2个加号或者乘号，使其结果式子的结果最小。</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>比赛时有的思路：<br />讨论长度2和3.<br />有0的，结果为0；<br />有1的，要讨论（乱了），如果前n-1个数中没有1，要找连续两位数里最小的，然后写不完了。<br>复盘：无需讨论，直接遍历i，看i和i+1上数字情况。</p>
<p>官方题解：<br>首先，让我们遍历位置 i，这样我们就不用在第 i-th 和 (i+1)-th 元素之间放置一个数学符号。</p>
<p>接下来，我们有以下任务——我们有 n−1数字，我们需要在每对相邻数字之间放置一个 + or × 符号以最小化结果。有三种可能的情况：</p>
<p>如果至少有一个 0，答案是 0。我们可以简单地将所有符号放置为 ×.<br>如果所有数字都是 1，答案是 1。我们可以简单地将所有符号放置为 ×.<br>否则，答案是不等于 1 的数字之和。将大于 1 的数字相乘是没有好处的，所有 1 都可以简单地乘以任何邻居。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>], b[<span class="number">20</span>], c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> tc;</span><br><span class="line">    cin &gt;&gt; tc;</span><br><span class="line">    <span class="keyword">while</span> (tc--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">        <span class="comment">// a[n]是数字数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            a[i] = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c = <span class="number">0</span>; <span class="comment">// b数组用来算结果。</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) <span class="comment">// 讨论第i个数字，是否将它和下一个数字组成一个两位数</span></span><br><span class="line">                    b[c++] = a[j] * <span class="number">10</span> + a[j + <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (i + <span class="number">1</span> != j) <span class="comment">// 没到第i个数字，就直接放</span></span><br><span class="line">                    b[c++] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">bool</span> f = <span class="number">0</span>; <span class="comment">// 有0，直接break</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++)</span><br><span class="line">                f |= b[j] == <span class="number">0</span>; <span class="comment">// 检查 b[j] 是否为0，并根据结果设置 f 的最低位。如果 b[j] 为0，f 的最低位将被设置为1；否则，f 的值保持不变（如果它的最低位已经是1的话）</span></span><br><span class="line">            <span class="keyword">if</span> (f)              <span class="comment">// 有0直接break</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> cur = <span class="number">0</span>; <span class="comment">// 暂时答案</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++)</span><br><span class="line">                <span class="keyword">if</span> (b[j] != <span class="number">1</span>) <span class="comment">// 不为1就加</span></span><br><span class="line">                    cur += b[j];</span><br><span class="line">            <span class="keyword">if</span> (!cur)</span><br><span class="line">                cur++;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, cur); <span class="comment">// 比较哪种最小</span></span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>这题耗了一半赛时还没做出来，感觉属实不应该，之后找补<br>复盘：其实一开始就想到贪心总体思路是对的，但是之后没有把贪心的情况考虑完整就开始写代码，导致代码写的很乱。</p>
<h3 id=""><a href="#" class="headerlink" title=""></a><br /></h3>]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>codeforces</tag>
        <tag>题解</tag>
        <tag>div3</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2024/06/hello-world/</url>
    <content><![CDATA[<p>本博客于2024年6月30日下午搭建，用来记录本人学习过程和分享等···<br>还没想好写点啥，先占个坑吧<br>使用<a href="https://hexo.io/">hexo</a>搭建，主题为<a href="https://github.com/iissnan/hexo-theme-next">butterfly</a></p>
<p>这里顺便写写博客美化计划吧：<br>1.加图床（优先）（需要插件？？）<br>2.归档分类<br>3、···头像啥的杂项 (7.4：都弄好了,顺便测试给这个post加一个随机封面)</p>
]]></content>
  </entry>
  <entry>
    <title>vue+uniapp学习记录+问题解决</title>
    <url>/2024/07/post/</url>
    <content><![CDATA[<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p><a href="https://www.bilibili.com/video/BV1Yh4y1o7of/?p=2&share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">第02讲 创建uniapp+vue3项目_ev_哔哩哔哩_bilibili</a><br />跟着这个视频走的。<br /><a href="http://t.csdnimg.cn/nDsZK">vue终端提示无法加载文件 C:\Users\Administrator\AppData\Roaming\npm\vue.ps1，因为在此系统上禁止运行脚本_vue : 无法加载文件-CSDN博客</a><br />解决Vue不能用指令的问题</p>
<p><a href="http://t.csdnimg.cn/phwZT">HBuilder X 运行到微信开发者工具 打不开项目 的另一种原因_hbuilderx运行微信小程序运行不出来-CSDN博客</a><br />解决不能运行到微信开发者工具</p>
<p><a href="https://dev.to/hexcube/how-to-add-sass-support-to-a-vite-react-app-37p">How to add Sass support to a Vite React app</a><br />插件不能用</p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>开发</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客技术栈总结（持续更新）</title>
    <url>/2024/07/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8A%80%E6%9C%AF%E6%A0%88%E6%80%BB%E7%BB%93%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    <content><![CDATA[<p>本篇文章持续更新我的博客建立过程和学习过程。</p>
<h1 id="搭建：hexo-github"><a href="#搭建：hexo-github" class="headerlink" title="搭建：hexo+github"></a>搭建：hexo+github</h1><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>在b站键入hexo和github检索，有很多这样的教程。<br />主要参考以下几个：<br /><a href="https://www.bilibili.com/video/BV1Ju4m1c7WR/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">【零成本】Hexo个人博客搭建教程 | 无需服务器</a><br /><a href="https://player.bilibili.com/player.html?bvid=BV16b4y1G7fo&autoplay=0">无限空间的免费图床，感谢cloudflare</a><br />搭建过程基本上就是使用github建库，git更新，然后hexo ，一个基于node.js的框架，用来搭载博客在服务器上。</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>hexo clean<br />hexo g ：generate生成<br />hexo d：deploy部署到github上<br />hexo s：本地部署</p>
<h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><ol>
<li>hexo d部署失败</li>
</ol>
<p>解决方案：改hosts；<br />&#x2F;&#x2F;取消http代理<br /><code>git config --global --unset http.proxy</code><br />&#x2F;&#x2F;取消https代理 <br /><code>git config --global --unset https.proxy</code><br />部署时候不一定会跳出登录验证，因为跟着教程走已经把登录信息放在config里了，当时还傻傻不知道···</p>
<ol start="2">
<li>博客变成下载，是json设置的问题。</li>
</ol>
<p><a href="http://t.csdnimg.cn/23YrP">hexo踩坑之点击页面跳转变下载文件_hexo academian 的页内跳转-CSDN博客</a></p>
<ol start="3">
<li>hexo d之前要先装载如下命令<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="博客编写"><a href="#博客编写" class="headerlink" title="博客编写"></a>博客编写</h1><h2 id="语雀"><a href="#语雀" class="headerlink" title="语雀"></a>语雀</h2><p>好用的编辑器，已经陆陆续续使用近一年，学生能免费认证获取会员。支持各种小功能，谁用谁知道。<br />导出markdown放在本地仓库然后进一步deploy。</p>
<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><h2 id="前期尝试"><a href="#前期尝试" class="headerlink" title="前期尝试"></a>前期尝试</h2><p>picgo+国外某免费图床&#x2F;github图床&#x2F;Telegraph-image图床<br />结果就是picgo上传不了，网络问题？遂不弄了，直接手动用自己的Telegraph-image图床。<br /><img src="https://imagebed-c8c.pages.dev/file/9531029aa4f240bf11a1d.png"></p>
<h2 id="目前方案"><a href="#目前方案" class="headerlink" title="目前方案"></a>目前方案</h2><p>使用cloudflare部署Telegraph-image图床。具体操作也是看b站的一些教程：<br /><a href="https://www.bilibili.com/video/BV13N411z7Lu/?share_source=copy_web&vd_source=f7a53b8de055733cb21cb53554bc98b7">无限空间的免费图床，感谢cloudflare</a></p>
<p>7.2日当天部署完毕：遇到一些问题。只能截图上传，本地突然上传失败。</p>
<h1 id="小功能的部署"><a href="#小功能的部署" class="headerlink" title="小功能的部署"></a>小功能的部署</h1><h2 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h2><p>使用hexo-generator-searchdb<br><a href="https://github.com/next-theme/hexo-generator-searchdb">hexo-generator-searchdb</a></p>
<h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><p>使用hexo-wordcount，这些基本上都是butterfly官方提供的推荐插件，不多赘述了。</p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
